{"version":3,"sources":["../../../projects/autocomplete-lib/src/lib/autocomplete-lib.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/autocomplete-lib/src/lib/autocomplete/autocomplete.component.ts","../../../projects/autocomplete-lib/src/lib/autocomplete/highlight.pipe.ts","../../../projects/autocomplete-lib/src/lib/autocomplete-cust-lib.module.ts"],"names":["AutocompleteLibComponent","prototype","ngOnInit","Component","args","selector","template","Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","isArrowUp","keyCode","isArrowDown","isArrowUpDown","isEnter","isBackspace","isDelete","isESC","isTab","AutocompleteComponent","elementRef","renderer","_this","this","query","filteredList","historyList","isHistoryListVisible","selectedIdx","toHighlight","notFound","isFocused","isOpen","isScrollToEnd","overlay","manualOpen","undefined","manualClose","data","placeHolder","heading","historyHeading","historyListMaxNumber","notFoundText","minQueryLength","selected","EventEmitter","inputChanged","inputFocused","inputCleared","opened","closed","scrolledToEnd","searchPhrase","propagateChange","emit","writeValue","registerOnChange","fn","registerOnTouched","onChange","event","target","setDisabledState","isDisabled","disabled","setInitialValue","initialValue","ngAfterViewInit","initEventStream","handleScroll","select","ngOnChanges","changes","Array","isArray","currentValue","handleItemsChange","firstChange","handleOpen","filterList","initSearchHistory","filter","item","toLowerCase","indexOf","constructor","searchKeyword","toString","isType","window","localStorage","getItem","historyIdentifier","existingHistory","JSON","parse","some","existingItem","copiedExistingHistory","slice","splice","setItem","stringify","selectedIndex","map","el","unshift","saveHistory","handleClose","handleClick","clickedComponent","inside","nativeElement","parentNode","handleOverlay","listen","filteredListElement","scrollToEnd","setPanelState","stopPropagation","open","close","focus","handleFocus","clear","remove","history","isLoading","searchInput","scrollTop","scrollHeight","clientHeight","inputKeyUp$","fromEvent","pipe","inputKeyDown$","listenEventStream","debounceTime","subscribe","onKeyUp","preventDefault","onFocusItem","onHandleEnter","onEsc","onTab","onDelete","totalNumItem","key","sum","scrollToFocusedItem","index","listElement","historyListElement","items","childNodes","node","nodeType","className","includes","listHeight","offsetHeight","itemHeight","visibleTop","visibleBottom","targetPosition","offsetTop","blur","copiedHistoryList","saveHistoryToLocalStorage","removeHistoryItem","v","removeItem","resetHistoryList","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","host","(document:click)","class","ElementRef","Renderer2","ViewChild","Input","Output","ContentChild","TemplateRef","HighlightPipe","transform","text","search","pattern","replace","split","t","join","regex","RegExp","name","match","text2","assign","Pipe","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-autocomplete-lib',\n  template: `\n    <p>\n      autocomplete-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class AutocompleteLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  AfterViewInit,\n  Component, ContentChild,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges, TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Observable} from 'rxjs';\nimport {debounceTime, filter, map} from 'rxjs/operators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Keyboard events\n */\nconst isArrowUp = keyCode => keyCode === 38;\nconst isArrowDown = keyCode => keyCode === 40;\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = keyCode => keyCode === 13;\nconst isBackspace = keyCode => keyCode === 8;\nconst isDelete = keyCode => keyCode === 46;\nconst isESC = keyCode => keyCode === 27;\nconst isTab = keyCode => keyCode === 9;\n\n\n@Component({\n  selector: 'ng-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'handleClick($event)',\n    'class': 'ng-autocomplete'\n  },\n})\n\nexport class AutocompleteComponent implements OnInit, OnChanges, AfterViewInit, ControlValueAccessor {\n  @ViewChild('searchInput') searchInput: ElementRef; // input element\n  @ViewChild('filteredListElement') filteredListElement: ElementRef; // element of items\n  @ViewChild('historyListElement') historyListElement: ElementRef; // element of history items\n\n  inputKeyUp$: Observable<any>; // input events\n  inputKeyDown$: Observable<any>; // input events\n\n  public query = ''; // search query\n  public filteredList = []; // list of items\n  public historyList = []; // list of history items\n  public isHistoryListVisible = true;\n  public elementRef;\n  public selectedIdx = -1;\n  public toHighlight: string = '';\n  public notFound = false;\n  public isFocused = false;\n  public isOpen = false;\n  public isScrollToEnd = false;\n  public overlay = false;\n  private manualOpen = undefined;\n  private manualClose = undefined;\n\n\n  // @Inputs\n  /**\n   * Data of items list.\n   * It can be array of strings or array of objects.\n   */\n  @Input() public data = [];\n  @Input() public searchKeyword: string; // keyword to filter the list\n  @Input() public placeHolder = ''; // input placeholder\n  @Input() public heading = '';\n  @Input() public initialValue: any; // set initial value\n  /**\n   * History identifier of history list\n   * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n   * If it is null then history is hidden.\n   * History list is visible if at least one history item is stored.\n   */\n  @Input() public historyIdentifier: string;\n  /**\n   * Heading text of history list.\n   * If it is null then history heading is hidden.\n   */\n  @Input() public historyHeading = 'Recently selected';\n  @Input() public historyListMaxNumber = 15; // maximum number of items in the history list.\n  @Input() public notFoundText = 'Not found'; // set custom text when filter returns empty result\n  @Input() public isLoading: boolean; // loading mask\n  @Input() public debounceTime: 400; // delay time while typing\n  @Input() public disabled: boolean; // input disable/enable\n  /**\n   * The minimum number of characters the user must type before a search is performed.\n   */\n  @Input() public minQueryLength = 1;\n\n\n  // @Output events\n  /** Event that is emitted whenever an item from the list is selected. */\n  @Output() selected = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is changed. */\n  @Output() inputChanged = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is focused. */\n  @Output() readonly inputFocused: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted whenever an input is cleared. */\n  @Output() readonly inputCleared: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly scrolledToEnd: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly searchPhrase: EventEmitter<string> = new EventEmitter<string>();\n\n\n  // Custom templates\n  @Input() itemTemplate !: TemplateRef<any>;\n  @Input() notFoundTemplate !: TemplateRef<any>;\n  @ContentChild(TemplateRef) customTemplate !: TemplateRef<any>;\n\n  /**\n   * Propagates new value when model changes\n   */\n  propagateChange: any = () => {\n    this.searchPhrase.emit(this.query);\n  };\n\n\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n  writeValue(value: any) {\n    this.query = value;\n  }\n\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n  registerOnTouched(fn: () => void): void {\n  }\n\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    this.elementRef = elementRef;\n  }\n\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit() {\n    this.setInitialValue(this.initialValue);\n  }\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n\n  /**\n   * Set initial value\n   * @param value\n   */\n  public setInitialValue(value: any) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n\n  /**\n   * Update search results\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes &&\n      changes.data &&\n      Array.isArray(changes.data.currentValue)\n    ) {\n      this.handleItemsChange();\n      if (!changes.data.firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n\n  /**\n   * Items change\n   */\n  public handleItemsChange() {\n    this.isScrollToEnd = false;\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0;\n  }\n\n  /**\n   * Filter data\n   */\n  public filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.data.filter((item: any) => {\n        if (typeof item === 'string') {\n          // string logic, check equality of strings\n          return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n        } else if (typeof item === 'object' || item.constructor === Object) {\n          // object logic, check property equality\n          return item[this.searchKeyword].toString().toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n        }\n      });\n    } else {\n      this.notFound = false;\n    }\n  }\n\n\n  /**\n   * Check type of item in the list.\n   * @param item\n   */\n  isType(item) {\n    return typeof item === 'string';\n  }\n\n  /**\n   * Select item in the list.\n   * @param item\n   */\n  public select(item) {\n    this.query = !this.isType(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = [];\n\n        // check if selected item exists in existingHistory\n        if (!existingHistory.some((existingItem) => !this.isType(existingItem)\n          ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n\n          // check if items don't exceed max allowed number\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isType(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            const selectedIndex = copiedExistingHistory.map((el) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n    this.handleClose();\n  }\n\n  /**\n   * Document click\n   * @param e event\n   */\n  public handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n\n  /**\n   * Handle body overlay\n   */\n  handleOverlay() {\n    this.overlay = false;\n  }\n\n  /**\n   * Scroll items\n   */\n  public handleScroll() {\n    this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n\n  /**\n   * Define panel state\n   */\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    }\n    // If controls are untouched\n    if (typeof this.manualOpen === 'undefined'\n      && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // If one of the controls is untouched and other is deactivated\n    if (typeof this.manualOpen === 'undefined'\n      && this.manualClose === false\n      || typeof this.manualClose === 'undefined'\n      && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if controls are touched but both are deactivated\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if open control is touched and activated\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    }\n\n    // if close control is touched and activated\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n\n  /**\n   * Manual controls\n   */\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n\n  /**\n   * Remove search query\n   */\n  public remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n  }\n\n  /**\n   * Initialize historyList search\n   */\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    }\n    // If data exists\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    this.searchInput.nativeElement.focus();\n    if (this.isFocused) {\n      return;\n    }\n    this.inputFocused.emit(e);\n    // if data exists then open\n    if (this.data && this.data.length) {\n      this.setPanelState(event);\n    }\n    this.isFocused = true;\n  }\n\n  scrollToEnd(): void {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement.nativeElement\n      .scrollTop;\n    const scrollHeight = this.filteredListElement.nativeElement\n      .scrollHeight;\n    const elementHeight = this.filteredListElement.nativeElement\n      .clientHeight;\n    const atBottom = scrollHeight === scrollTop + elementHeight;\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n\n  /**\n   * Initialize keyboard events\n   */\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(\n      this.searchInput.nativeElement, 'keyup'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.inputKeyDown$ = fromEvent(\n      this.searchInput.nativeElement,\n      'keydown'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.listenEventStream();\n  }\n\n  /**\n   * Listen keyboard events\n   */\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$\n      .pipe(\n        filter(e =>\n          !isArrowUpDown(e.keyCode) &&\n          !isEnter(e.keyCode) &&\n          !isESC(e.keyCode) &&\n          !isTab(e.keyCode)),\n        debounceTime(this.debounceTime)\n      ).subscribe(e => {\n      this.onKeyUp(e);\n    });\n\n    // cursor up & down\n    this.inputKeyDown$.pipe(filter(\n      e => isArrowUpDown(e.keyCode)\n    )).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    });\n\n    // enter keyup\n    this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      //this.onHandleEnter();\n    });\n\n    // enter keydown\n    this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    });\n\n    // ESC\n    this.inputKeyUp$.pipe(\n      filter(e => isESC(e.keyCode),\n        debounceTime(100))\n    ).subscribe(e => {\n      this.onEsc();\n    });\n\n    // TAB\n    this.inputKeyDown$.pipe(\n      filter(e => isTab(e.keyCode))\n    ).subscribe(e => {\n      this.onTab();\n    });\n\n    // delete\n    this.inputKeyDown$.pipe(\n      filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))\n    ).subscribe(e => {\n      this.onDelete();\n    });\n  }\n\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      //this.filterList();\n      this.setPanelState(e);\n    }\n    // note that '' can be a valid query\n    if (!this.query && this.query !== '') {\n      return;\n    }\n    // if query >= to minQueryLength\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList();\n\n      // If no results found\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n    }\n  }\n\n\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n  scrollToFocusedItem(index) {\n    let listElement = null;\n    // Define list element\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement.childNodes).filter((node: any) => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n\n  /**\n   * Select item on enter click\n   */\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isType(this.filteredList[this.selectedIdx])\n          ? this.filteredList[this.selectedIdx][this.searchKeyword]\n          : this.filteredList[this.selectedIdx];\n\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isType(this.historyList[this.selectedIdx])\n          ? this.historyList[this.selectedIdx][this.searchKeyword]\n          : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n\n  /**\n   * Esc click\n   */\n  onEsc() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Tab click\n   */\n  onTab() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Delete click\n   */\n  onDelete() {\n    // panel is open on delete\n    this.isOpen = true;\n  }\n\n\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some((item) => !this.isType(item)\n        ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n\n        // check if items don't exceed max allowed number\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isType(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(\n      `${this.historyIdentifier}`,\n      JSON.stringify(selected)\n    );\n  }\n\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, search: any, searchKeyword?: any): any {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter((t) => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].toString().replace(regex, (match) => `<b>${match}</b>`);\n      // copy original object\n      const text2 = {...text};\n      // set bold value into searchKeyword of copied object\n      text2[searchKeyword] = name;\n      return text2;\n    } else {\n      return search ? text.replace(regex, (match) => `<b>${match}</b>`) : text;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AutocompleteLibComponent} from './autocomplete-lib.component';\nimport {AutocompleteComponent} from './autocomplete/autocomplete.component';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HighlightPipe} from './autocomplete/highlight.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe],\n  exports: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe]\n})\nexport class AutocompleteCustLibModule {\n}\n"]}